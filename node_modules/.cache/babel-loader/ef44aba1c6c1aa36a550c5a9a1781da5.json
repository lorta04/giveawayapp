{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Latta\\\\giveawayapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Latta\\\\giveawayapp\\\\src\\\\component\\\\Modal\\\\LoginModal.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState } from 'react'; //import LoginForm from '../login-form/Login'\n\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport LoginForm from '../login-form/Login';\n\nconst ModalBox = props => {\n  const isOpen = props.isOpen,\n        buttonLabel = props.buttonLabel,\n        className = props.className;\n\n  const _useState = useState(isOpen),\n        _useState2 = _slicedToArray(_useState, 2),\n        modal = _useState2[0],\n        setModal = _useState2[1];\n\n  const toggle = () => setModal(!modal); //const datagw = data;\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: toggle,\n    className: \"btn btn-link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"LOGIN\"), React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Login\"), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(LoginForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }))));\n};\n\nexport default ModalBox;","map":{"version":3,"sources":["C:/Users/Latta/giveawayapp/src/component/Modal/LoginModal.js"],"names":["React","useState","Button","Modal","ModalHeader","ModalBody","ModalFooter","LoginForm","ModalBox","props","isOpen","buttonLabel","className","modal","setModal","toggle"],"mappings":";;AACA,OAAO,sCAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,WAAhD,QAAmE,YAAnE;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA,QAExBC,MAFwB,GAKtBD,KALsB,CAExBC,MAFwB;AAAA,QAGxBC,WAHwB,GAKtBF,KALsB,CAGxBE,WAHwB;AAAA,QAIxBC,SAJwB,GAKtBH,KALsB,CAIxBG,SAJwB;;AAAA,oBAOAX,QAAQ,CAACS,MAAD,CAPR;AAAA;AAAA,QAOnBG,KAPmB;AAAA,QAOZC,QAPY;;AAS1B,QAAMC,MAAM,GAAG,MAAMD,QAAQ,CAAC,CAACD,KAAF,CAA7B,CAT0B,CAU1B;;;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAIE,MAAnB;AAA2B,IAAA,SAAS,EAAC,cAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEF,KAAf;AAAsB,IAAA,MAAM,EAAEE,MAA9B;AAAsC,IAAA,SAAS,EAAEH,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEG,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFF,CAFF,CADF;AAWD,CAtBD;;AAwBA,eAAeP,QAAf","sourcesContent":["\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useState } from 'react';\r\n//import LoginForm from '../login-form/Login'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport LoginForm from '../login-form/Login';\r\n\r\nconst ModalBox = (props) => {\r\n  const {\r\n    isOpen,\r\n    buttonLabel,\r\n    className\r\n  } = props;\r\n  \r\n  const [modal, setModal] = useState(isOpen);\r\n\r\n  const toggle = () => setModal(!modal);\r\n  //const datagw = data;\r\n  return (\r\n    <div>\r\n      <button onClick = {toggle} className=\"btn btn-link\">LOGIN</button>\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>Login</ModalHeader>\r\n        <ModalBody>\r\n            <LoginForm/>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalBox;"]},"metadata":{},"sourceType":"module"}